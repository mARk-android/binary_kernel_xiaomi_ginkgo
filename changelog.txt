=================================================
Changes in 4.14.229
Upstream 4.14.228 -> 229-rc2
=================================================

selinux-vsock-set-sid-for-socket-returned-by-accept
ipv6-weaken-the-v4mapped-source-check
ext4-fix-bh-ref-count-on-error-paths
rpc-fix-null-dereference-on-kmalloc-failure
asoc-rt5640-fix-dac-and-adc-vol-tlv-values-being-off
asoc-rt5651-fix-dac-and-adc-vol-tlv-values-being-off
asoc-sgtl5000-set-dap_avc_ctrl-register-to-correct-d
asoc-es8316-simplify-adc_pga_gain_tlv-table
asoc-cs42l42-fix-mixer-volume-control
asoc-cs42l42-always-wait-at-least-3ms-after-reset
powerpc-force-inlining-of-cpu_has_feature-to-avoid-b
vhost-fix-vhost_vq_reset
scsi-st-fix-a-use-after-free-in-st_open
scsi-qla2xxx-fix-broken-endif-placement
staging-comedi-cb_pcidas-fix-request_irq-warn
staging-comedi-cb_pcidas64-fix-request_irq-warn
asoc-rt5659-update-mclk-rate-in-set_sysclk
ext4-do-not-iput-inode-under-running-transaction-in-
can-dev-move-driver-related-infrastructure-into-sepa
brcmfmac-clear-eap-association-status-bits-on-linkdo
net-ethernet-aquantia-handle-error-cleanup-of-start-
appletalk-fix-skb-allocation-size-in-loopback-case
net-wan-lmc-unregister-device-when-no-matching-devic

+ ccache clang
+ below are some added changes
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
kbuild: some changes
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
tracing: add support for objtool mcount
FTRACE_MCOUNT_USE_OBJTOOL
FTRACE_MCOUNT_USE_RECORDMCOUNT
kbuild: Disable extra debugging info in .s output 
kbuild: use KBUILD_DEFCONFIG as the fallback for DEFCONFIG_LIST


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
DEFCONFIG - some changes
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

CONFIG_BLK_DEV_LOOP_MIN_COUNT=0
Don't pre-create any loop devices
This allows to reduce boot time slightly 
and save resources on ROMs that
don't use updatable APEXs. 
ROMs that do use updatable APEXs need ~30
loop devices anyway, so this doesn't change much.


CONFIG_THINLTO=y
Enable ThinLTO optimizations
ThinLTO is actually quite fast 
on multi-threaded systems now 
and doesn't increase build times.

CONFIG_ARM64_SW_TTBR0_PAN is not set 
improvement 7% syscall, 7.8% libc

CONFIG_QCOM_QHEE_ENABLE_MEM_PROTECTION 
Disable QHEE kernel memory protection


# CONFIG_AUDIT is not set
# CONFIG_LOG_CPU_MAX_BUF_SHIFT=17
CONFIG_LOG_BUF_SHIFT=17 -> 21
Simplify log buffer allocation 


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Makefile - some changes
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
use smaller dict. size for xz module compression of default 8 MB
mod_compress_cmd = $(XZ) --lzma2=dict=2MiB -f
tracing: add support for objtool mcount
CONFIG_FTRACE_MCOUNT_USE_OBJTOOL
CONFIG_FTRACE_MCOUNT_USE_CC
BUILD_CFLAGS += call cc-option -> DEBUG_CFLAGS
Force default ARCH to be arm64
BACKPORT: FROMLIST: kbuild: generate autoksyms.h early 
kbuild: stop removing stale <linux/version.h> file 
kbuild: make DWARF version a choice
 
Use -O3 optimizations line: 366, 368

CC_FLAGS_LTO
CONFIG_LTOCLANG_THIN

